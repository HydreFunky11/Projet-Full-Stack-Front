{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/remyb/Documents/cours/dev%20web%20full%20stack/final%20project/Projet-Full-Stack-Front/src/app/sessions/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport Link from 'next/link';\r\nimport { useAuth } from '../../contexts/authContext';\r\nimport styles from '../../styles/sessions.module.scss';\r\nimport { apiRequest } from '../../services/api/apiClient';\r\n\r\ninterface Session {\r\n  id: number;\r\n  title: string;\r\n  description: string | null;\r\n  status: string;\r\n  scheduledAt: string | null;\r\n  gm: {\r\n    id: number;\r\n    username: string;\r\n  };\r\n  participants: {\r\n    id: number;\r\n    userId: number;\r\n    role: string;\r\n    user: {\r\n      username: string;\r\n    };\r\n  }[];\r\n  _count: {\r\n    characters: number;\r\n    diceRolls: number;\r\n  };\r\n}\r\n\r\nexport default function SessionsPage() {\r\n  const [sessions, setSessions] = useState<Session[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [showCreateForm, setShowCreateForm] = useState(false);\r\n  const [newSession, setNewSession] = useState({\r\n    title: '',\r\n    description: '',\r\n    status: 'planifiée',\r\n    scheduledAt: ''\r\n  });\r\n  const { user, isAuthenticated } = useAuth();\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    // Si l'utilisateur n'est pas authentifié, rediriger vers la page de connexion\r\n    if (!isAuthenticated && !loading) {\r\n      router.push('/login');\r\n      return;\r\n    }\r\n\r\n    fetchSessions();\r\n  }, [isAuthenticated, loading, router]);\r\n\r\n  const fetchSessions = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await apiRequest<{ success: boolean; sessions: Session[] }>('/sessions');\r\n      \r\n      if (response.success) {\r\n        setSessions(response.sessions);\r\n      } else {\r\n        setError('Erreur lors de la récupération des sessions');\r\n      }\r\n    } catch (err) {\r\n      setError('Impossible de récupérer les sessions');\r\n      console.error('Erreur lors de la récupération des sessions:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCreateSession = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    try {\r\n      setLoading(true);\r\n      const response = await apiRequest<{ success: boolean; session: Session }>('/sessions', {\r\n        method: 'POST',\r\n        body: newSession\r\n      });\r\n      \r\n      if (response.success) {\r\n        // Ajouter la nouvelle session à la liste\r\n        setSessions([...sessions, response.session]);\r\n        // Fermer le formulaire et réinitialiser les champs\r\n        setShowCreateForm(false);\r\n        setNewSession({\r\n          title: '',\r\n          description: '',\r\n          status: 'planifiée',\r\n          scheduledAt: ''\r\n        });\r\n      }\r\n    } catch (err) {\r\n      setError('Impossible de créer la session');\r\n      console.error('Erreur lors de la création de la session:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\r\n    const { name, value } = e.target;\r\n    setNewSession({ ...newSession, [name]: value });\r\n  };\r\n\r\n  const formatDate = (dateString: string | null) => {\r\n    if (!dateString) return 'Non programmée';\r\n    \r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString('fr-FR', {\r\n      day: '2-digit',\r\n      month: '2-digit',\r\n      year: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  const getStatusClass = (status: string) => {\r\n    switch (status) {\r\n      case 'planifiée': return styles.planned;\r\n      case 'en_cours': return styles.inProgress;\r\n      case 'terminée': return styles.completed;\r\n      default: return '';\r\n    }\r\n  };\r\n\r\n  const getStatusText = (status: string) => {\r\n    switch (status) {\r\n      case 'planifiée': return 'Planifiée';\r\n      case 'en_cours': return 'En cours';\r\n      case 'terminée': return 'Terminée';\r\n      default: return status;\r\n    }\r\n  };\r\n\r\n  if (loading && sessions.length === 0) {\r\n    return (\r\n      <div className={styles.sessionsContainer}>\r\n        <h1>Sessions de jeu</h1>\r\n        <div className={styles.loading}>Chargement des sessions...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={styles.sessionsContainer}>\r\n      <div className={styles.header}>\r\n        <h1>Sessions de jeu</h1>\r\n        <button \r\n          className={styles.createButton}\r\n          onClick={() => setShowCreateForm(!showCreateForm)}\r\n        >\r\n          {showCreateForm ? 'Annuler' : 'Créer une session'}\r\n        </button>\r\n      </div>\r\n\r\n      {error && <div className={styles.error}>{error}</div>}\r\n\r\n      {showCreateForm && (\r\n        <div className={styles.createFormContainer}>\r\n          <h2>Nouvelle session</h2>\r\n          <form onSubmit={handleCreateSession} className={styles.createForm}>\r\n            <div className={styles.formGroup}>\r\n              <label htmlFor=\"title\">Titre *</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"title\"\r\n                name=\"title\"\r\n                value={newSession.title}\r\n                onChange={handleInputChange}\r\n                required\r\n                placeholder=\"Ex: La quête du dragon d'or\"\r\n              />\r\n            </div>\r\n            \r\n            <div className={styles.formGroup}>\r\n              <label htmlFor=\"description\">Description</label>\r\n              <textarea\r\n                id=\"description\"\r\n                name=\"description\"\r\n                value={newSession.description}\r\n                onChange={handleInputChange}\r\n                placeholder=\"Décrivez votre session...\"\r\n                rows={4}\r\n              />\r\n            </div>\r\n            \r\n            <div className={styles.formRow}>\r\n              <div className={styles.formGroup}>\r\n                <label htmlFor=\"status\">Statut</label>\r\n                <select\r\n                  id=\"status\"\r\n                  name=\"status\"\r\n                  value={newSession.status}\r\n                  onChange={handleInputChange}\r\n                >\r\n                  <option value=\"planifiée\">Planifiée</option>\r\n                  <option value=\"en_cours\">En cours</option>\r\n                  <option value=\"terminée\">Terminée</option>\r\n                </select>\r\n              </div>\r\n              \r\n              <div className={styles.formGroup}>\r\n                <label htmlFor=\"scheduledAt\">Date prévue</label>\r\n                <input\r\n                  type=\"datetime-local\"\r\n                  id=\"scheduledAt\"\r\n                  name=\"scheduledAt\"\r\n                  value={newSession.scheduledAt}\r\n                  onChange={handleInputChange}\r\n                />\r\n              </div>\r\n            </div>\r\n            \r\n            <div className={styles.formActions}>\r\n              <button type=\"submit\" className={styles.submitButton} disabled={loading}>\r\n                {loading ? 'Création en cours...' : 'Créer la session'}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      )}\r\n\r\n      {sessions.length === 0 ? (\r\n        <div className={styles.noSessions}>\r\n          <p>Aucune session disponible. Créez-en une nouvelle pour commencer à jouer !</p>\r\n        </div>\r\n      ) : (\r\n        <div className={styles.sessionsList}>\r\n          {sessions.map((session) => (\r\n            <Link href={`/sessions/${session.id}`} key={session.id} className={styles.sessionCard}>\r\n              <div className={styles.sessionHeader}>\r\n                <h2>{session.title}</h2>\r\n                <span className={`${styles.status} ${getStatusClass(session.status)}`}>\r\n                  {getStatusText(session.status)}\r\n                </span>\r\n              </div>\r\n              \r\n              <div className={styles.sessionInfo}>\r\n                <p className={styles.description}>\r\n                  {session.description ? (\r\n                    session.description.length > 150 \r\n                      ? `${session.description.substring(0, 150)}...` \r\n                      : session.description\r\n                  ) : (\r\n                    <span className={styles.noDescription}>Pas de description</span>\r\n                  )}\r\n                </p>\r\n                \r\n                <div className={styles.metadata}>\r\n                  <div className={styles.gmInfo}>\r\n                    <span className={styles.label}>Maître de jeu:</span> {session.gm.username}\r\n                  </div>\r\n                  \r\n                  {session.scheduledAt && (\r\n                    <div className={styles.dateInfo}>\r\n                      <span className={styles.label}>Date:</span> {formatDate(session.scheduledAt)}\r\n                    </div>\r\n                  )}\r\n                  \r\n                  <div className={styles.stats}>\r\n                    <div>\r\n                      <span className={styles.count}>{session.participants.length}</span> participants\r\n                    </div>\r\n                    <div>\r\n                      <span className={styles.count}>{session._count.characters}</span> personnages\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}