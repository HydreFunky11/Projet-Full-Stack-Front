{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/remyb/Documents/cours/dev%20web%20full%20stack/final%20project/Projet-Full-Stack-Front/src/services/api/characterService.ts"],"sourcesContent":["import { apiRequest } from './apiClient';\r\n\r\nexport interface Character {\r\n  id: number;\r\n  name: string;\r\n  race: string;\r\n  class: string;\r\n  level: number;\r\n  background?: string;\r\n  inventory?: string;\r\n  stats: string | object;\r\n  isAlive: boolean;\r\n  userId: number;\r\n  sessionId?: number | null;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  session?: {\r\n    id: number;\r\n    title: string;\r\n    status: string;\r\n  };\r\n  user?: {\r\n    id: number;\r\n    username: string;\r\n  };\r\n}\r\n\r\nexport const characterService = {\r\n  // Créer un nouveau personnage\r\n  async createCharacter(characterData: any) {\r\n    try {\r\n      return await apiRequest<{success: boolean; character: Character}>('/characters', {\r\n        method: 'POST',\r\n        body: characterData\r\n      });\r\n    } catch (error) {\r\n      console.error('Erreur lors de la création du personnage:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Récupérer tous les personnages de l'utilisateur\r\n  async getCharacters() {\r\n    try {\r\n      return await apiRequest<{success: boolean; characters: Character[]}>('/characters');\r\n    } catch (error) {\r\n      console.error('Erreur lors de la récupération des personnages:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Récupérer un personnage par son ID\r\n  async getCharacterById(id: number) {\r\n    try {\r\n      return await apiRequest<{success: boolean; character: Character}>(`/characters/${id}`);\r\n    } catch (error) {\r\n      console.error(`Erreur lors de la récupération du personnage ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Mettre à jour un personnage\r\n  async updateCharacter(id: number, characterData: any) {\r\n    try {\r\n      return await apiRequest<{success: boolean; character: Character}>(`/characters/${id}`, {\r\n        method: 'PUT',\r\n        body: characterData\r\n      });\r\n    } catch (error) {\r\n      console.error(`Erreur lors de la mise à jour du personnage ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Supprimer un personnage\r\n  async deleteCharacter(id: number) {\r\n    try {\r\n      return await apiRequest<{success: boolean}>(`/characters/${id}`, {\r\n        method: 'DELETE'\r\n      });\r\n    } catch (error) {\r\n      console.error(`Erreur lors de la suppression du personnage ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Récupérer les personnages d'une session\r\n  async getSessionCharacters(sessionId: number) {\r\n    try {\r\n      return await apiRequest<{success: boolean; characters: Character[]}>(`/characters/session/${sessionId}`);\r\n    } catch (error) {\r\n      console.error(`Erreur lors de la récupération des personnages de la session ${sessionId}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Associer un personnage à une session\r\n  async assignToSession(characterId: number, sessionId: number | null) {\r\n    try {\r\n      return await apiRequest<{success: boolean; character: Character}>(`/characters/${characterId}/assign-session`, {\r\n        method: 'PUT',\r\n        body: { sessionId }\r\n      });\r\n    } catch (error) {\r\n      console.error(`Erreur lors de l'association du personnage ${characterId} à la session:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n};"],"names":[],"mappings":";;;AAAA;;AA2BO,MAAM,mBAAmB;IAC9B,8BAA8B;IAC9B,MAAM,iBAAgB,aAAkB;QACtC,IAAI;YACF,OAAO,MAAM,CAAA,GAAA,mIAAA,CAAA,aAAU,AAAD,EAA4C,eAAe;gBAC/E,QAAQ;gBACR,MAAM;YACR;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,6CAA6C;YAC3D,MAAM;QACR;IACF;IAEA,kDAAkD;IAClD,MAAM;QACJ,IAAI;YACF,OAAO,MAAM,CAAA,GAAA,mIAAA,CAAA,aAAU,AAAD,EAA+C;QACvE,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,mDAAmD;YACjE,MAAM;QACR;IACF;IAEA,qCAAqC;IACrC,MAAM,kBAAiB,EAAU;QAC/B,IAAI;YACF,OAAO,MAAM,CAAA,GAAA,mIAAA,CAAA,aAAU,AAAD,EAA4C,CAAC,YAAY,EAAE,IAAI;QACvF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,CAAC,6CAA6C,EAAE,GAAG,CAAC,CAAC,EAAE;YACrE,MAAM;QACR;IACF;IAEA,8BAA8B;IAC9B,MAAM,iBAAgB,EAAU,EAAE,aAAkB;QAClD,IAAI;YACF,OAAO,MAAM,CAAA,GAAA,mIAAA,CAAA,aAAU,AAAD,EAA4C,CAAC,YAAY,EAAE,IAAI,EAAE;gBACrF,QAAQ;gBACR,MAAM;YACR;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,CAAC,4CAA4C,EAAE,GAAG,CAAC,CAAC,EAAE;YACpE,MAAM;QACR;IACF;IAEA,0BAA0B;IAC1B,MAAM,iBAAgB,EAAU;QAC9B,IAAI;YACF,OAAO,MAAM,CAAA,GAAA,mIAAA,CAAA,aAAU,AAAD,EAAsB,CAAC,YAAY,EAAE,IAAI,EAAE;gBAC/D,QAAQ;YACV;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,CAAC,4CAA4C,EAAE,GAAG,CAAC,CAAC,EAAE;YACpE,MAAM;QACR;IACF;IAEA,0CAA0C;IAC1C,MAAM,sBAAqB,SAAiB;QAC1C,IAAI;YACF,OAAO,MAAM,CAAA,GAAA,mIAAA,CAAA,aAAU,AAAD,EAA+C,CAAC,oBAAoB,EAAE,WAAW;QACzG,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,CAAC,6DAA6D,EAAE,UAAU,CAAC,CAAC,EAAE;YAC5F,MAAM;QACR;IACF;IAEA,uCAAuC;IACvC,MAAM,iBAAgB,WAAmB,EAAE,SAAwB;QACjE,IAAI;YACF,OAAO,MAAM,CAAA,GAAA,mIAAA,CAAA,aAAU,AAAD,EAA4C,CAAC,YAAY,EAAE,YAAY,eAAe,CAAC,EAAE;gBAC7G,QAAQ;gBACR,MAAM;oBAAE;gBAAU;YACpB;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,CAAC,2CAA2C,EAAE,YAAY,cAAc,CAAC,EAAE;YACzF,MAAM;QACR;IACF;AACF","debugId":null}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/remyb/Documents/cours/dev%20web%20full%20stack/final%20project/Projet-Full-Stack-Front/src/services/api/sessionService.ts"],"sourcesContent":["import { apiRequest } from './apiClient';\r\nimport { User } from './authService';\r\n\r\nexport interface Session {\r\n  id: number;\r\n  title: string;\r\n  description: string | null;\r\n  scheduledAt: string | null;\r\n  status: string;\r\n  gmId: number;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  gm: {\r\n    id: number;\r\n    username: string;\r\n  };\r\n  participants: {\r\n    id: number;\r\n    userId: number;\r\n    role: string;\r\n    user: {\r\n      username: string;\r\n    };\r\n  }[];\r\n  _count: {\r\n    characters: number;\r\n    diceRolls: number;\r\n  };\r\n}\r\n\r\nexport interface SessionsResponse {\r\n  success: boolean;\r\n  count: number;\r\n  sessions: Session[];\r\n}\r\n\r\nexport interface SessionResponse {\r\n  success: boolean;\r\n  session: Session;\r\n}\r\n\r\nexport const sessionService = {\r\n  getSessions: async (\r\n    filters?: { status?: string; gmId?: number; title?: string }\r\n  ): Promise<SessionsResponse> => {\r\n    let queryParams = '';\r\n    if (filters) {\r\n      const params = new URLSearchParams();\r\n      if (filters.status) params.append('status', filters.status);\r\n      if (filters.gmId) params.append('gmId', filters.gmId.toString());\r\n      if (filters.title) params.append('title', filters.title);\r\n      queryParams = `?${params.toString()}`;\r\n    }\r\n    return apiRequest<SessionsResponse>(`/sessions${queryParams}`);\r\n  },\r\n\r\n  getSessionById: async (id: number): Promise<SessionResponse> => {\r\n    return apiRequest<SessionResponse>(`/sessions/${id}`);\r\n  },\r\n\r\n  createSession: async (sessionData: {\r\n    title: string;\r\n    description?: string;\r\n    scheduledAt?: string;\r\n    status?: string;\r\n  }): Promise<SessionResponse> => {\r\n    return apiRequest<SessionResponse>('/sessions', {\r\n      method: 'POST',\r\n      body: sessionData,\r\n    });\r\n  },\r\n\r\n  updateSession: async (\r\n    id: number,\r\n    sessionData: {\r\n      title?: string;\r\n      description?: string;\r\n      scheduledAt?: string;\r\n      status?: string;\r\n    }\r\n  ): Promise<SessionResponse> => {\r\n    return apiRequest<SessionResponse>(`/sessions/${id}`, {\r\n      method: 'PUT',\r\n      body: sessionData,\r\n    });\r\n  },\r\n\r\n  deleteSession: async (id: number): Promise<{ success: boolean; message: string }> => {\r\n    return apiRequest<{ success: boolean; message: string }>(`/sessions/${id}`, {\r\n      method: 'DELETE',\r\n    });\r\n  },\r\n\r\n  addParticipant: async (\r\n    sessionId: number,\r\n    userId: number,\r\n    role: string\r\n  ): Promise<{ success: boolean; message: string }> => {\r\n    return apiRequest<{ success: boolean; message: string }>(`/sessions/${sessionId}/participants`, {\r\n      method: 'POST',\r\n      body: { userId, role },\r\n    });\r\n  },\r\n  \r\n  removeParticipant: async (\r\n    sessionId: number,\r\n    participantId: number\r\n  ): Promise<{ success: boolean; message: string }> => {\r\n    return apiRequest<{ success: boolean; message: string }>(\r\n      `/sessions/${sessionId}/participants/${participantId}`,\r\n      {\r\n        method: 'DELETE',\r\n      }\r\n    );\r\n  },\r\n};"],"names":[],"mappings":";;;AAAA;;AAyCO,MAAM,iBAAiB;IAC5B,aAAa,OACX;QAEA,IAAI,cAAc;QAClB,IAAI,SAAS;YACX,MAAM,SAAS,IAAI;YACnB,IAAI,QAAQ,MAAM,EAAE,OAAO,MAAM,CAAC,UAAU,QAAQ,MAAM;YAC1D,IAAI,QAAQ,IAAI,EAAE,OAAO,MAAM,CAAC,QAAQ,QAAQ,IAAI,CAAC,QAAQ;YAC7D,IAAI,QAAQ,KAAK,EAAE,OAAO,MAAM,CAAC,SAAS,QAAQ,KAAK;YACvD,cAAc,CAAC,CAAC,EAAE,OAAO,QAAQ,IAAI;QACvC;QACA,OAAO,CAAA,GAAA,mIAAA,CAAA,aAAU,AAAD,EAAoB,CAAC,SAAS,EAAE,aAAa;IAC/D;IAEA,gBAAgB,OAAO;QACrB,OAAO,CAAA,GAAA,mIAAA,CAAA,aAAU,AAAD,EAAmB,CAAC,UAAU,EAAE,IAAI;IACtD;IAEA,eAAe,OAAO;QAMpB,OAAO,CAAA,GAAA,mIAAA,CAAA,aAAU,AAAD,EAAmB,aAAa;YAC9C,QAAQ;YACR,MAAM;QACR;IACF;IAEA,eAAe,OACb,IACA;QAOA,OAAO,CAAA,GAAA,mIAAA,CAAA,aAAU,AAAD,EAAmB,CAAC,UAAU,EAAE,IAAI,EAAE;YACpD,QAAQ;YACR,MAAM;QACR;IACF;IAEA,eAAe,OAAO;QACpB,OAAO,CAAA,GAAA,mIAAA,CAAA,aAAU,AAAD,EAAyC,CAAC,UAAU,EAAE,IAAI,EAAE;YAC1E,QAAQ;QACV;IACF;IAEA,gBAAgB,OACd,WACA,QACA;QAEA,OAAO,CAAA,GAAA,mIAAA,CAAA,aAAU,AAAD,EAAyC,CAAC,UAAU,EAAE,UAAU,aAAa,CAAC,EAAE;YAC9F,QAAQ;YACR,MAAM;gBAAE;gBAAQ;YAAK;QACvB;IACF;IAEA,mBAAmB,OACjB,WACA;QAEA,OAAO,CAAA,GAAA,mIAAA,CAAA,aAAU,AAAD,EACd,CAAC,UAAU,EAAE,UAAU,cAAc,EAAE,eAAe,EACtD;YACE,QAAQ;QACV;IAEJ;AACF","debugId":null}},
    {"offset": {"line": 153, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/styles/characterDetail.module.scss.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"actionButton\": \"characterDetail-module-scss-module__S8mgtG__actionButton\",\n  \"actions\": \"characterDetail-module-scss-module__S8mgtG__actions\",\n  \"alive\": \"characterDetail-module-scss-module__S8mgtG__alive\",\n  \"backButton\": \"characterDetail-module-scss-module__S8mgtG__backButton\",\n  \"basicInfo\": \"characterDetail-module-scss-module__S8mgtG__basicInfo\",\n  \"cancel\": \"characterDetail-module-scss-module__S8mgtG__cancel\",\n  \"cancelButton\": \"characterDetail-module-scss-module__S8mgtG__cancelButton\",\n  \"characterDetail\": \"characterDetail-module-scss-module__S8mgtG__characterDetail\",\n  \"characterHeader\": \"characterDetail-module-scss-module__S8mgtG__characterHeader\",\n  \"characterInfo\": \"characterDetail-module-scss-module__S8mgtG__characterInfo\",\n  \"checkboxGroup\": \"characterDetail-module-scss-module__S8mgtG__checkboxGroup\",\n  \"dead\": \"characterDetail-module-scss-module__S8mgtG__dead\",\n  \"delete\": \"characterDetail-module-scss-module__S8mgtG__delete\",\n  \"editForm\": \"characterDetail-module-scss-module__S8mgtG__editForm\",\n  \"error\": \"characterDetail-module-scss-module__S8mgtG__error\",\n  \"formActions\": \"characterDetail-module-scss-module__S8mgtG__formActions\",\n  \"formGroup\": \"characterDetail-module-scss-module__S8mgtG__formGroup\",\n  \"formRow\": \"characterDetail-module-scss-module__S8mgtG__formRow\",\n  \"header\": \"characterDetail-module-scss-module__S8mgtG__header\",\n  \"infoCard\": \"characterDetail-module-scss-module__S8mgtG__infoCard\",\n  \"infoItem\": \"characterDetail-module-scss-module__S8mgtG__infoItem\",\n  \"label\": \"characterDetail-module-scss-module__S8mgtG__label\",\n  \"loading\": \"characterDetail-module-scss-module__S8mgtG__loading\",\n  \"notFound\": \"characterDetail-module-scss-module__S8mgtG__notFound\",\n  \"section\": \"characterDetail-module-scss-module__S8mgtG__section\",\n  \"sessionLink\": \"characterDetail-module-scss-module__S8mgtG__sessionLink\",\n  \"statItem\": \"characterDetail-module-scss-module__S8mgtG__statItem\",\n  \"statLabel\": \"characterDetail-module-scss-module__S8mgtG__statLabel\",\n  \"statValue\": \"characterDetail-module-scss-module__S8mgtG__statValue\",\n  \"status\": \"characterDetail-module-scss-module__S8mgtG__status\",\n  \"submitButton\": \"characterDetail-module-scss-module__S8mgtG__submitButton\",\n  \"value\": \"characterDetail-module-scss-module__S8mgtG__value\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/remyb/Documents/cours/dev%20web%20full%20stack/final%20project/Projet-Full-Stack-Front/src/app/characters/%5Bid%5D/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams, useRouter } from 'next/navigation';\r\nimport { characterService, Character } from '../../../services/api/characterService';\r\nimport { sessionService } from '../../../services/api/sessionService';\r\nimport Link from 'next/link';\r\nimport styles from '../../../styles/characterDetail.module.scss';\r\n\r\nexport default function CharacterDetail() {\r\n  const params = useParams();\r\n  const router = useRouter();\r\n  const [character, setCharacter] = useState<Character | null>(null);\r\n  const [availableSessions, setAvailableSessions] = useState<any[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    race: '',\r\n    class: '',\r\n    level: 1,\r\n    background: '',\r\n    inventory: '',\r\n    isAlive: true,\r\n    sessionId: null as number | null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        \r\n        // Récupérer les détails du personnage\r\n        const id = Array.isArray(params.id) ? params.id[0] : params.id;\r\n        const response = await characterService.getCharacterById(Number(id));\r\n        setCharacter(response.character);\r\n        \r\n        // Initialiser le formulaire avec les données du personnage\r\n        setFormData({\r\n          name: response.character.name,\r\n          race: response.character.race,\r\n          class: response.character.class,\r\n          level: response.character.level,\r\n          background: response.character.background || '',\r\n          inventory: response.character.inventory || '',\r\n          isAlive: response.character.isAlive,\r\n          sessionId: response.character.sessionId,\r\n        });\r\n        \r\n        // Récupérer les sessions disponibles\r\n        const sessionsResponse = await sessionService.getSessions();\r\n        setAvailableSessions(sessionsResponse.sessions);\r\n      } catch (err) {\r\n        setError((err as Error).message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [params.id]);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\r\n    const { name, value, type } = e.target;\r\n    \r\n    if (type === 'checkbox') {\r\n      const checkbox = e.target as HTMLInputElement;\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        [name]: checkbox.checked,\r\n      }));\r\n    } else if (name === 'sessionId') {\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        [name]: value === '' ? null : Number(value),\r\n      }));\r\n    } else {\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      setLoading(true);\r\n      const id = Array.isArray(params.id) ? params.id[0] : params.id;\r\n      const response = await characterService.updateCharacter(Number(id), formData);\r\n      setCharacter(response.character);\r\n      setEditMode(false);\r\n    } catch (err) {\r\n      setError((err as Error).message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    if (window.confirm('Êtes-vous sûr de vouloir supprimer ce personnage ? Cette action est irréversible.')) {\r\n      try {\r\n        const id = Array.isArray(params.id) ? params.id[0] : params.id;\r\n        await characterService.deleteCharacter(Number(id));\r\n        router.push('/characters');\r\n      } catch (err) {\r\n        setError((err as Error).message);\r\n      }\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className={styles.loading}>Chargement des détails du personnage...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className={styles.error}>{error}</div>;\r\n  }\r\n\r\n  if (!character) {\r\n    return <div className={styles.notFound}>Personnage non trouvé</div>;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.characterDetail}>\r\n      <div className={styles.header}>\r\n        <Link href=\"/characters\" className={styles.backButton}>\r\n          &larr; Retour aux personnages\r\n        </Link>\r\n        <div className={styles.actions}>\r\n          <button \r\n            onClick={() => setEditMode(!editMode)} \r\n            className={`${styles.actionButton} ${editMode ? styles.cancel : ''}`}\r\n          >\r\n            {editMode ? 'Annuler' : 'Modifier'}\r\n          </button>\r\n          {!editMode && (\r\n            <button onClick={handleDelete} className={`${styles.actionButton} ${styles.delete}`}>\r\n              Supprimer\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {editMode ? (\r\n        <form onSubmit={handleSubmit} className={styles.editForm}>\r\n          <h1>Modifier le personnage</h1>\r\n          \r\n          <div className={styles.formGroup}>\r\n            <label htmlFor=\"name\">Nom</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              name=\"name\"\r\n              value={formData.name}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          \r\n          <div className={styles.formRow}>\r\n            <div className={styles.formGroup}>\r\n              <label htmlFor=\"race\">Race</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"race\"\r\n                name=\"race\"\r\n                value={formData.race}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n            </div>\r\n            \r\n            <div className={styles.formGroup}>\r\n              <label htmlFor=\"class\">Classe</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"class\"\r\n                name=\"class\"\r\n                value={formData.class}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n            </div>\r\n            \r\n            <div className={styles.formGroup}>\r\n              <label htmlFor=\"level\">Niveau</label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"level\"\r\n                name=\"level\"\r\n                min=\"1\"\r\n                max=\"20\"\r\n                value={formData.level}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n          \r\n          <div className={styles.formGroup}>\r\n            <label htmlFor=\"background\">Historique</label>\r\n            <textarea\r\n              id=\"background\"\r\n              name=\"background\"\r\n              value={formData.background}\r\n              onChange={handleChange}\r\n              rows={4}\r\n            />\r\n          </div>\r\n          \r\n          <div className={styles.formGroup}>\r\n            <label htmlFor=\"inventory\">Inventaire</label>\r\n            <textarea\r\n              id=\"inventory\"\r\n              name=\"inventory\"\r\n              value={formData.inventory}\r\n              onChange={handleChange}\r\n              rows={4}\r\n            />\r\n          </div>\r\n          \r\n          <div className={styles.formGroup}>\r\n            <label htmlFor=\"sessionId\">Session</label>\r\n            <select\r\n              id=\"sessionId\"\r\n              name=\"sessionId\"\r\n              value={formData.sessionId === null ? '' : formData.sessionId}\r\n              onChange={handleChange}\r\n            >\r\n              <option value=\"\">Aucune session</option>\r\n              {availableSessions.map((session) => (\r\n                <option key={session.id} value={session.id}>\r\n                  {session.title}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          \r\n          <div className={styles.checkboxGroup}>\r\n            <input\r\n              type=\"checkbox\"\r\n              id=\"isAlive\"\r\n              name=\"isAlive\"\r\n              checked={formData.isAlive}\r\n              onChange={handleChange}\r\n            />\r\n            <label htmlFor=\"isAlive\">Personnage vivant</label>\r\n          </div>\r\n          \r\n          <div className={styles.formActions}>\r\n            <button type=\"submit\" className={styles.submitButton}>\r\n              Enregistrer les modifications\r\n            </button>\r\n            <button \r\n              type=\"button\" \r\n              onClick={() => setEditMode(false)} \r\n              className={styles.cancelButton}\r\n            >\r\n              Annuler\r\n            </button>\r\n          </div>\r\n        </form>\r\n      ) : (\r\n        <div className={styles.characterInfo}>\r\n          <div className={styles.characterHeader}>\r\n            <h1>{character.name}</h1>\r\n            <span className={`${styles.status} ${character.isAlive ? styles.alive : styles.dead}`}>\r\n              {character.isAlive ? 'Vivant' : 'Décédé'}\r\n            </span>\r\n          </div>\r\n          \r\n          <div className={styles.infoCard}>\r\n            <div className={styles.basicInfo}>\r\n              <div className={styles.infoItem}>\r\n                <span className={styles.label}>Race:</span>\r\n                <span className={styles.value}>{character.race}</span>\r\n              </div>\r\n              <div className={styles.infoItem}>\r\n                <span className={styles.label}>Classe:</span>\r\n                <span className={styles.value}>{character.class}</span>\r\n              </div>\r\n              <div className={styles.infoItem}>\r\n                <span className={styles.label}>Niveau:</span>\r\n                <span className={styles.value}>{character.level}</span>\r\n              </div>\r\n              {character.session && (\r\n                <div className={styles.infoItem}>\r\n                  <span className={styles.label}>Session:</span>\r\n                  <Link href={`/sessions/${character.session.id}`} className={styles.sessionLink}>\r\n                    {character.session.title}\r\n                  </Link>\r\n                </div>\r\n              )}\r\n            </div>\r\n            \r\n            {character.background && (\r\n              <div className={styles.section}>\r\n                <h2>Historique</h2>\r\n                <p>{character.background}</p>\r\n              </div>\r\n            )}\r\n            \r\n            {character.inventory && (\r\n              <div className={styles.section}>\r\n                <h2>Inventaire</h2>\r\n                <p>{character.inventory}</p>\r\n              </div>\r\n            )}\r\n            {character.stats && (\r\n              <div className={styles.section}>\r\n                <h2>Statistiques</h2>\r\n                <div className={styles.stats}>\r\n                  {Object.entries(\r\n                    typeof character.stats === 'string' \r\n                      ? JSON.parse(character.stats) \r\n                      : character.stats\r\n                  ).map(([stat, value]) => (\r\n                    <div key={stat} className={styles.statItem}>\r\n                      <span className={styles.statLabel}>{stat}</span>\r\n                      <span className={styles.statValue}> {String(value)}</span>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}