{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/remyb/Documents/cours/dev%20web%20full%20stack/final%20project/Projet-Full-Stack-Front/src/services/api/apiClient.ts"],"sourcesContent":["const API_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:4000/api';\r\n\r\n// Fonctions utilitaires pour gérer les cookies\r\nexport function getCookie(name: string): string | undefined {\r\n  if (typeof document === 'undefined') return undefined;\r\n  \r\n  const value = `; ${document.cookie}`;\r\n  const parts = value.split(`; ${name}=`);\r\n  if (parts.length === 2) return parts.pop()?.split(';').shift();\r\n  \r\n  return undefined;\r\n}\r\n\r\nexport function setCookie(name: string, value: string, days = 7): void {\r\n  if (typeof document === 'undefined') return;\r\n  \r\n  const expires = new Date();\r\n  expires.setTime(expires.getTime() + days * 24 * 60 * 60 * 1000);\r\n  document.cookie = `${name}=${value};expires=${expires.toUTCString()};path=/`;\r\n}\r\n\r\nexport function removeCookie(name: string): void {\r\n  if (typeof document === 'undefined') return;\r\n  \r\n  document.cookie = `${name}=;expires=Thu, 01 Jan 1970 00:00:01 GMT;path=/`;\r\n}\r\n\r\ninterface ApiOptions {\r\n  method?: string;\r\n  headers?: Record<string, string>;\r\n  body?: any;\r\n  credentials?: RequestCredentials;\r\n  includeAuth?: boolean;\r\n}\r\n\r\nexport async function apiRequest<T>(endpoint: string, options: ApiOptions = {}): Promise<T> {\r\n  const { \r\n    method = 'GET',\r\n    headers = {},\r\n    body, \r\n    credentials = 'include',\r\n    includeAuth = true\r\n  } = options;\r\n  \r\n  const requestHeaders: Record<string, string> = {\r\n    'Content-Type': 'application/json',\r\n    ...headers,\r\n  };\r\n\r\n  // Ajouter le token d'authentification si nécessaire\r\n  if (includeAuth) {\r\n    const token = getCookie('token');\r\n    if (token) {\r\n      requestHeaders['Authorization'] = `Bearer ${token}`;\r\n    }\r\n  }\r\n\r\n  const requestOptions: RequestInit = {\r\n    method,\r\n    headers: requestHeaders,\r\n    credentials,\r\n    ...(body && { body: JSON.stringify(body) }),\r\n  };\r\n\r\n  try {\r\n    const response = await fetch(`${API_URL}${endpoint}`, requestOptions);\r\n    const data = await response.json();\r\n    \r\n    // Capturer le token dans la réponse\r\n    if (data.token) {\r\n      setCookie('token', data.token);\r\n    }\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(data.message || 'Une erreur est survenue');\r\n    }\r\n    \r\n    return data;\r\n  } catch (error) {\r\n    if (error instanceof Error) {\r\n      throw error;\r\n    }\r\n    throw new Error('Une erreur réseau est survenue');\r\n  }\r\n}\r\n\r\n// Services d'authentification\r\nexport const authService = {\r\n  async login(email: string, password: string) {\r\n    try {\r\n      const response = await apiRequest<{success: boolean; token: string; user: any}>('/auth/login', {\r\n        method: 'POST',\r\n        body: { email, password },\r\n      });\r\n      \r\n      if (response.token) {\r\n        setCookie('token', response.token);\r\n      }\r\n      \r\n      return response;\r\n    } catch (error) {\r\n      console.error('Erreur de connexion:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  async register(username: string, email: string, password: string) {\r\n    try {\r\n      const response = await apiRequest<{success: boolean; token: string; user: any}>('/auth/register', {\r\n        method: 'POST',\r\n        body: { username, email, password },\r\n      });\r\n      \r\n      if (response.token) {\r\n        setCookie('token', response.token);\r\n      }\r\n      \r\n      return response;\r\n    } catch (error) {\r\n      console.error('Erreur d\\'inscription:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  async logout() {\r\n    try {\r\n      await apiRequest('/auth/logout', {\r\n        method: 'POST',\r\n      });\r\n      \r\n      removeCookie('token');\r\n    } catch (error) {\r\n      console.error('Erreur de déconnexion:', error);\r\n      removeCookie('token');\r\n    }\r\n  },\r\n  \r\n  async getCurrentUser() {\r\n    try {\r\n      return await apiRequest<{success: boolean; user: any}>('/users/me');\r\n    } catch (error) {\r\n      console.error('Erreur de récupération du profil:', error);\r\n      return null;\r\n    }\r\n  },\r\n  \r\n  isAuthenticated() {\r\n    return !!getCookie('token');\r\n  }\r\n};"],"names":[],"mappings":";;;;;;;AAAA,MAAM,UAAU,QAAQ,GAAG,CAAC,mBAAmB,IAAI;AAG5C,SAAS,UAAU,IAAY;IACpC,IAAI,OAAO,aAAa,aAAa,OAAO;IAE5C,MAAM,QAAQ,CAAC,EAAE,EAAE,SAAS,MAAM,EAAE;IACpC,MAAM,QAAQ,MAAM,KAAK,CAAC,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;IACtC,IAAI,MAAM,MAAM,KAAK,GAAG,OAAO,MAAM,GAAG,IAAI,MAAM,KAAK;IAEvD,OAAO;AACT;AAEO,SAAS,UAAU,IAAY,EAAE,KAAa,EAAE,OAAO,CAAC;IAC7D,IAAI,OAAO,aAAa,aAAa;IAErC,MAAM,UAAU,IAAI;IACpB,QAAQ,OAAO,CAAC,QAAQ,OAAO,KAAK,OAAO,KAAK,KAAK,KAAK;IAC1D,SAAS,MAAM,GAAG,GAAG,KAAK,CAAC,EAAE,MAAM,SAAS,EAAE,QAAQ,WAAW,GAAG,OAAO,CAAC;AAC9E;AAEO,SAAS,aAAa,IAAY;IACvC,IAAI,OAAO,aAAa,aAAa;IAErC,SAAS,MAAM,GAAG,GAAG,KAAK,8CAA8C,CAAC;AAC3E;AAUO,eAAe,WAAc,QAAgB,EAAE,UAAsB,CAAC,CAAC;IAC5E,MAAM,EACJ,SAAS,KAAK,EACd,UAAU,CAAC,CAAC,EACZ,IAAI,EACJ,cAAc,SAAS,EACvB,cAAc,IAAI,EACnB,GAAG;IAEJ,MAAM,iBAAyC;QAC7C,gBAAgB;QAChB,GAAG,OAAO;IACZ;IAEA,oDAAoD;IACpD,IAAI,aAAa;QACf,MAAM,QAAQ,UAAU;QACxB,IAAI,OAAO;YACT,cAAc,CAAC,gBAAgB,GAAG,CAAC,OAAO,EAAE,OAAO;QACrD;IACF;IAEA,MAAM,iBAA8B;QAClC;QACA,SAAS;QACT;QACA,GAAI,QAAQ;YAAE,MAAM,KAAK,SAAS,CAAC;QAAM,CAAC;IAC5C;IAEA,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,GAAG,UAAU,UAAU,EAAE;QACtD,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,oCAAoC;QACpC,IAAI,KAAK,KAAK,EAAE;YACd,UAAU,SAAS,KAAK,KAAK;QAC/B;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM,KAAK,OAAO,IAAI;QAClC;QAEA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,IAAI,iBAAiB,OAAO;YAC1B,MAAM;QACR;QACA,MAAM,IAAI,MAAM;IAClB;AACF;AAGO,MAAM,cAAc;IACzB,MAAM,OAAM,KAAa,EAAE,QAAgB;QACzC,IAAI;YACF,MAAM,WAAW,MAAM,WAAyD,eAAe;gBAC7F,QAAQ;gBACR,MAAM;oBAAE;oBAAO;gBAAS;YAC1B;YAEA,IAAI,SAAS,KAAK,EAAE;gBAClB,UAAU,SAAS,SAAS,KAAK;YACnC;YAEA,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,wBAAwB;YACtC,MAAM;QACR;IACF;IAEA,MAAM,UAAS,QAAgB,EAAE,KAAa,EAAE,QAAgB;QAC9D,IAAI;YACF,MAAM,WAAW,MAAM,WAAyD,kBAAkB;gBAChG,QAAQ;gBACR,MAAM;oBAAE;oBAAU;oBAAO;gBAAS;YACpC;YAEA,IAAI,SAAS,KAAK,EAAE;gBAClB,UAAU,SAAS,SAAS,KAAK;YACnC;YAEA,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,0BAA0B;YACxC,MAAM;QACR;IACF;IAEA,MAAM;QACJ,IAAI;YACF,MAAM,WAAW,gBAAgB;gBAC/B,QAAQ;YACV;YAEA,aAAa;QACf,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,0BAA0B;YACxC,aAAa;QACf;IACF;IAEA,MAAM;QACJ,IAAI;YACF,OAAO,MAAM,WAA0C;QACzD,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,qCAAqC;YACnD,OAAO;QACT;IACF;IAEA;QACE,OAAO,CAAC,CAAC,UAAU;IACrB;AACF","debugId":null}},
    {"offset": {"line": 146, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/remyb/Documents/cours/dev%20web%20full%20stack/final%20project/Projet-Full-Stack-Front/src/services/api/authService.ts"],"sourcesContent":["import { apiRequest } from './apiClient';\r\n\r\nexport interface User {\r\n  id: number;\r\n  username: string;\r\n  email: string;\r\n  createdAt: string;\r\n}\r\n\r\nexport interface AuthResponse {\r\n  success: boolean;\r\n  message: string;\r\n  token: string;\r\n  user: User;\r\n}\r\n\r\nexport const authService = {\r\n  register: async (username: string, email: string, password: string): Promise<AuthResponse> => {\r\n    return apiRequest<AuthResponse>('/users/register', {\r\n      method: 'POST',\r\n      body: { username, email, password },\r\n    });\r\n  },\r\n\r\n  login: async (email: string, password: string): Promise<AuthResponse> => {\r\n    return apiRequest<AuthResponse>('/users/login', {\r\n      method: 'POST',\r\n      body: { email, password },\r\n    });\r\n  },\r\n\r\n  logout: async (): Promise<{ success: boolean, message: string }> => {\r\n    return apiRequest('/users/logout', {\r\n      method: 'POST',\r\n    });\r\n  },\r\n\r\n  getCurrentUser: async (): Promise<User | null> => {\r\n    try {\r\n      // Si vous avez un endpoint pour obtenir l'utilisateur actuel\r\n      const response = await apiRequest<{ success: boolean, user: User }>('/users/me');\r\n      return response.user;\r\n    } catch (error) {\r\n      return null;\r\n    }\r\n  }\r\n};"],"names":[],"mappings":";;;AAAA;;AAgBO,MAAM,cAAc;IACzB,UAAU,OAAO,UAAkB,OAAe;QAChD,OAAO,CAAA,GAAA,mIAAA,CAAA,aAAU,AAAD,EAAgB,mBAAmB;YACjD,QAAQ;YACR,MAAM;gBAAE;gBAAU;gBAAO;YAAS;QACpC;IACF;IAEA,OAAO,OAAO,OAAe;QAC3B,OAAO,CAAA,GAAA,mIAAA,CAAA,aAAU,AAAD,EAAgB,gBAAgB;YAC9C,QAAQ;YACR,MAAM;gBAAE;gBAAO;YAAS;QAC1B;IACF;IAEA,QAAQ;QACN,OAAO,CAAA,GAAA,mIAAA,CAAA,aAAU,AAAD,EAAE,iBAAiB;YACjC,QAAQ;QACV;IACF;IAEA,gBAAgB;QACd,IAAI;YACF,6DAA6D;YAC7D,MAAM,WAAW,MAAM,CAAA,GAAA,mIAAA,CAAA,aAAU,AAAD,EAAoC;YACpE,OAAO,SAAS,IAAI;QACtB,EAAE,OAAO,OAAO;YACd,OAAO;QACT;IACF;AACF","debugId":null}},
    {"offset": {"line": 216, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/remyb/Documents/cours/dev%20web%20full%20stack/final%20project/Projet-Full-Stack-Front/src/contexts/authContext.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { createContext, useState, useEffect, useContext, ReactNode } from 'react';\r\nimport { authService, User } from '../services/api/authService';\r\nimport { useRouter } from 'next/navigation';\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  register: (username: string, email: string, password: string) => Promise<void>;\r\n  logout: () => Promise<void>;\r\n}\r\n\r\n// Définir une valeur par défaut pour le contexte\r\nconst defaultContextValue: AuthContextType = {\r\n  user: null,\r\n  loading: false,\r\n  error: null,\r\n  login: async () => {},\r\n  register: async () => {},\r\n  logout: async () => {},\r\n};\r\n\r\nexport const AuthContext = createContext<AuthContextType>(defaultContextValue);\r\n\r\nexport function AuthProvider({ children }: { children: ReactNode }) {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const router = useRouter();\r\n\r\n  // Vérifier si l'utilisateur est déjà connecté au chargement\r\n  useEffect(() => {\r\n    const checkUser = async () => {\r\n      try {\r\n        const userData = await authService.getCurrentUser();\r\n        setUser(userData);\r\n      } catch (err) {\r\n        console.error('Erreur lors de la récupération de l\\'utilisateur:', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    checkUser();\r\n  }, []);\r\n\r\n  const login = async (email: string, password: string) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await authService.login(email, password);\r\n      setUser(response.user);\r\n      router.push('/dashboard');\r\n    } catch (err) {\r\n      setError((err as Error).message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const register = async (username: string, email: string, password: string) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await authService.register(username, email, password);\r\n      setUser(response.user);\r\n      router.push('/dashboard');\r\n    } catch (err) {\r\n      setError((err as Error).message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await authService.logout();\r\n      setUser(null);\r\n      router.push('/login');\r\n    } catch (err) {\r\n      setError((err as Error).message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, loading, error, login, register, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\n// Exportation du hook useAuth\r\nexport function useAuth() {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n}"],"names":[],"mappings":";;;;;;AAEA;AACA;AACA;AAJA;;;;;AAeA,iDAAiD;AACjD,MAAM,sBAAuC;IAC3C,MAAM;IACN,SAAS;IACT,OAAO;IACP,OAAO,WAAa;IACpB,UAAU,WAAa;IACvB,QAAQ,WAAa;AACvB;AAEO,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAmB;AAEnD,SAAS,aAAa,EAAE,QAAQ,EAA2B;IAChE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,4DAA4D;IAC5D,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,YAAY;YAChB,IAAI;gBACF,MAAM,WAAW,MAAM,qIAAA,CAAA,cAAW,CAAC,cAAc;gBACjD,QAAQ;YACV,EAAE,OAAO,KAAK;gBACZ,QAAQ,KAAK,CAAC,qDAAqD;YACrE,SAAU;gBACR,WAAW;YACb;QACF;QAEA;IACF,GAAG,EAAE;IAEL,MAAM,QAAQ,OAAO,OAAe;QAClC,WAAW;QACX,SAAS;QACT,IAAI;YACF,MAAM,WAAW,MAAM,qIAAA,CAAA,cAAW,CAAC,KAAK,CAAC,OAAO;YAChD,QAAQ,SAAS,IAAI;YACrB,OAAO,IAAI,CAAC;QACd,EAAE,OAAO,KAAK;YACZ,SAAS,AAAC,IAAc,OAAO;QACjC,SAAU;YACR,WAAW;QACb;IACF;IAEA,MAAM,WAAW,OAAO,UAAkB,OAAe;QACvD,WAAW;QACX,SAAS;QACT,IAAI;YACF,MAAM,WAAW,MAAM,qIAAA,CAAA,cAAW,CAAC,QAAQ,CAAC,UAAU,OAAO;YAC7D,QAAQ,SAAS,IAAI;YACrB,OAAO,IAAI,CAAC;QACd,EAAE,OAAO,KAAK;YACZ,SAAS,AAAC,IAAc,OAAO;QACjC,SAAU;YACR,WAAW;QACb;IACF;IAEA,MAAM,SAAS;QACb,WAAW;QACX,IAAI;YACF,MAAM,qIAAA,CAAA,cAAW,CAAC,MAAM;YACxB,QAAQ;YACR,OAAO,IAAI,CAAC;QACd,EAAE,OAAO,KAAK;YACZ,SAAS,AAAC,IAAc,OAAO;QACjC,SAAU;YACR,WAAW;QACb;IACF;IAEA,qBACE,8OAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAM;YAAS;YAAO;YAAO;YAAU;QAAO;kBAC1E;;;;;;AAGP;AAGO,SAAS;IACd,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 325, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/styles/navigation.module.scss.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"active\": \"navigation-module-scss-module__qsn8Ya__active\",\n  \"hamburger\": \"navigation-module-scss-module__qsn8Ya__hamburger\",\n  \"logo\": \"navigation-module-scss-module__qsn8Ya__logo\",\n  \"logoutButton\": \"navigation-module-scss-module__qsn8Ya__logoutButton\",\n  \"mobileMenuButton\": \"navigation-module-scss-module__qsn8Ya__mobileMenuButton\",\n  \"navContainer\": \"navigation-module-scss-module__qsn8Ya__navContainer\",\n  \"navLink\": \"navigation-module-scss-module__qsn8Ya__navLink\",\n  \"navLinks\": \"navigation-module-scss-module__qsn8Ya__navLinks\",\n  \"navigation\": \"navigation-module-scss-module__qsn8Ya__navigation\",\n  \"userMenu\": \"navigation-module-scss-module__qsn8Ya__userMenu\",\n  \"username\": \"navigation-module-scss-module__qsn8Ya__username\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 344, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/remyb/Documents/cours/dev%20web%20full%20stack/final%20project/Projet-Full-Stack-Front/src/components/navigation.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState } from 'react';\r\nimport Link from 'next/link';\r\nimport { useAuth } from '../contexts/authContext'; // Maintenant ce sera correctement importé\r\nimport { usePathname } from 'next/navigation';\r\nimport styles from '../styles/navigation.module.scss';\r\n\r\nexport default function Navigation() {\r\n  const { user, logout } = useAuth();\r\n  const pathname = usePathname();\r\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\r\n\r\n  const toggleMobileMenu = () => {\r\n    setMobileMenuOpen(!mobileMenuOpen);\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    await logout();\r\n    setMobileMenuOpen(false);\r\n  };\r\n\r\n  const isActive = (path: string) => {\r\n    return pathname === path;\r\n  };\r\n\r\n  return (\r\n    <nav className={styles.navigation}>\r\n      <div className={styles.navContainer}>\r\n        <Link href=\"/\" className={styles.logo}>\r\n          RPG Manager\r\n        </Link>\r\n\r\n        <button\r\n          className={styles.mobileMenuButton}\r\n          onClick={toggleMobileMenu}\r\n          aria-label=\"Menu principal\"\r\n        >\r\n          <span className={styles.hamburger}></span>\r\n        </button>\r\n\r\n        <div\r\n          className={`${styles.navLinks} ${mobileMenuOpen ? styles.active : ''}`}\r\n        >\r\n          {user ? (\r\n            <>\r\n              <Link\r\n                href=\"/dashboard\"\r\n                className={`${styles.navLink} ${isActive('/dashboard') ? styles.active : ''}`}\r\n                onClick={() => setMobileMenuOpen(false)}\r\n              >\r\n                Tableau de bord\r\n              </Link>\r\n              <Link\r\n                href=\"/sessions\"\r\n                className={`${styles.navLink} ${isActive('/sessions') ? styles.active : ''}`}\r\n                onClick={() => setMobileMenuOpen(false)}\r\n              >\r\n                Sessions\r\n              </Link>\r\n              <Link\r\n                href=\"/characters\"\r\n                className={`${styles.navLink} ${isActive('/characters') ? styles.active : ''}`}\r\n                onClick={() => setMobileMenuOpen(false)}\r\n              >\r\n                Personnages\r\n              </Link>\r\n              <div className={styles.userMenu}>\r\n                <span className={styles.username}>{user.username}</span>\r\n                <button onClick={handleLogout} className={styles.logoutButton}>\r\n                  Déconnexion\r\n                </button>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Link\r\n                href=\"/login\"\r\n                className={`${styles.navLink} ${isActive('/login') ? styles.active : ''}`}\r\n                onClick={() => setMobileMenuOpen(false)}\r\n              >\r\n                Connexion\r\n              </Link>\r\n              <Link\r\n                href=\"/register\"\r\n                className={`${styles.navLink} ${isActive('/register') ? styles.active : ''}`}\r\n                onClick={() => setMobileMenuOpen(false)}\r\n              >\r\n                Inscription\r\n              </Link>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA,gOAAmD,0CAA0C;AAC7F;AACA;AANA;;;;;;;AAQe,SAAS;IACtB,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAC/B,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAErD,MAAM,mBAAmB;QACvB,kBAAkB,CAAC;IACrB;IAEA,MAAM,eAAe;QACnB,MAAM;QACN,kBAAkB;IACpB;IAEA,MAAM,WAAW,CAAC;QAChB,OAAO,aAAa;IACtB;IAEA,qBACE,8OAAC;QAAI,WAAW,yJAAA,CAAA,UAAM,CAAC,UAAU;kBAC/B,cAAA,8OAAC;YAAI,WAAW,yJAAA,CAAA,UAAM,CAAC,YAAY;;8BACjC,8OAAC,4JAAA,CAAA,UAAI;oBAAC,MAAK;oBAAI,WAAW,yJAAA,CAAA,UAAM,CAAC,IAAI;8BAAE;;;;;;8BAIvC,8OAAC;oBACC,WAAW,yJAAA,CAAA,UAAM,CAAC,gBAAgB;oBAClC,SAAS;oBACT,cAAW;8BAEX,cAAA,8OAAC;wBAAK,WAAW,yJAAA,CAAA,UAAM,CAAC,SAAS;;;;;;;;;;;8BAGnC,8OAAC;oBACC,WAAW,GAAG,yJAAA,CAAA,UAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,iBAAiB,yJAAA,CAAA,UAAM,CAAC,MAAM,GAAG,IAAI;8BAErE,qBACC;;0CACE,8OAAC,4JAAA,CAAA,UAAI;gCACH,MAAK;gCACL,WAAW,GAAG,yJAAA,CAAA,UAAM,CAAC,OAAO,CAAC,CAAC,EAAE,SAAS,gBAAgB,yJAAA,CAAA,UAAM,CAAC,MAAM,GAAG,IAAI;gCAC7E,SAAS,IAAM,kBAAkB;0CAClC;;;;;;0CAGD,8OAAC,4JAAA,CAAA,UAAI;gCACH,MAAK;gCACL,WAAW,GAAG,yJAAA,CAAA,UAAM,CAAC,OAAO,CAAC,CAAC,EAAE,SAAS,eAAe,yJAAA,CAAA,UAAM,CAAC,MAAM,GAAG,IAAI;gCAC5E,SAAS,IAAM,kBAAkB;0CAClC;;;;;;0CAGD,8OAAC,4JAAA,CAAA,UAAI;gCACH,MAAK;gCACL,WAAW,GAAG,yJAAA,CAAA,UAAM,CAAC,OAAO,CAAC,CAAC,EAAE,SAAS,iBAAiB,yJAAA,CAAA,UAAM,CAAC,MAAM,GAAG,IAAI;gCAC9E,SAAS,IAAM,kBAAkB;0CAClC;;;;;;0CAGD,8OAAC;gCAAI,WAAW,yJAAA,CAAA,UAAM,CAAC,QAAQ;;kDAC7B,8OAAC;wCAAK,WAAW,yJAAA,CAAA,UAAM,CAAC,QAAQ;kDAAG,KAAK,QAAQ;;;;;;kDAChD,8OAAC;wCAAO,SAAS;wCAAc,WAAW,yJAAA,CAAA,UAAM,CAAC,YAAY;kDAAE;;;;;;;;;;;;;qDAMnE;;0CACE,8OAAC,4JAAA,CAAA,UAAI;gCACH,MAAK;gCACL,WAAW,GAAG,yJAAA,CAAA,UAAM,CAAC,OAAO,CAAC,CAAC,EAAE,SAAS,YAAY,yJAAA,CAAA,UAAM,CAAC,MAAM,GAAG,IAAI;gCACzE,SAAS,IAAM,kBAAkB;0CAClC;;;;;;0CAGD,8OAAC,4JAAA,CAAA,UAAI;gCACH,MAAK;gCACL,WAAW,GAAG,yJAAA,CAAA,UAAM,CAAC,OAAO,CAAC,CAAC,EAAE,SAAS,eAAe,yJAAA,CAAA,UAAM,CAAC,MAAM,GAAG,IAAI;gCAC5E,SAAS,IAAM,kBAAkB;0CAClC;;;;;;;;;;;;;;;;;;;;;;;;AASf","debugId":null}}]
}