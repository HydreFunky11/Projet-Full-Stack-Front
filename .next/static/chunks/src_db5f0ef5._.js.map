{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/remyb/Documents/cours/dev%20web%20full%20stack/final%20project/Projet-Full-Stack-Front/src/services/api/sessionService.ts"],"sourcesContent":["import { apiRequest } from './apiClient';\r\nimport { User } from './authService';\r\n\r\nexport interface Session {\r\n  id: number;\r\n  title: string;\r\n  description: string | null;\r\n  scheduledAt: string | null;\r\n  status: string;\r\n  gmId: number;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  gm: {\r\n    id: number;\r\n    username: string;\r\n  };\r\n  participants: {\r\n    id: number;\r\n    userId: number;\r\n    role: string;\r\n    user: {\r\n      username: string;\r\n    };\r\n  }[];\r\n  _count: {\r\n    characters: number;\r\n    diceRolls: number;\r\n  };\r\n}\r\n\r\nexport interface SessionsResponse {\r\n  success: boolean;\r\n  count: number;\r\n  sessions: Session[];\r\n}\r\n\r\nexport interface SessionResponse {\r\n  success: boolean;\r\n  session: Session;\r\n}\r\n\r\nexport const sessionService = {\r\n  getSessions: async (\r\n    filters?: { status?: string; gmId?: number; title?: string }\r\n  ): Promise<SessionsResponse> => {\r\n    let queryParams = '';\r\n    if (filters) {\r\n      const params = new URLSearchParams();\r\n      if (filters.status) params.append('status', filters.status);\r\n      if (filters.gmId) params.append('gmId', filters.gmId.toString());\r\n      if (filters.title) params.append('title', filters.title);\r\n      queryParams = `?${params.toString()}`;\r\n    }\r\n    return apiRequest<SessionsResponse>(`/sessions${queryParams}`);\r\n  },\r\n\r\n  getSessionById: async (id: number): Promise<SessionResponse> => {\r\n    return apiRequest<SessionResponse>(`/sessions/${id}`);\r\n  },\r\n\r\n  createSession: async (sessionData: {\r\n    title: string;\r\n    description?: string;\r\n    scheduledAt?: string;\r\n    status?: string;\r\n  }): Promise<SessionResponse> => {\r\n    return apiRequest<SessionResponse>('/sessions', {\r\n      method: 'POST',\r\n      body: sessionData,\r\n    });\r\n  },\r\n\r\n  updateSession: async (\r\n    id: number,\r\n    sessionData: {\r\n      title?: string;\r\n      description?: string;\r\n      scheduledAt?: string;\r\n      status?: string;\r\n    }\r\n  ): Promise<SessionResponse> => {\r\n    return apiRequest<SessionResponse>(`/sessions/${id}`, {\r\n      method: 'PUT',\r\n      body: sessionData,\r\n    });\r\n  },\r\n\r\n  deleteSession: async (id: number): Promise<{ success: boolean; message: string }> => {\r\n    return apiRequest<{ success: boolean; message: string }>(`/sessions/${id}`, {\r\n      method: 'DELETE',\r\n    });\r\n  },\r\n\r\n  addParticipant: async (\r\n    sessionId: number,\r\n    userId: number,\r\n    role: string\r\n  ): Promise<{ success: boolean; message: string }> => {\r\n    return apiRequest<{ success: boolean; message: string }>(`/sessions/${sessionId}/participants`, {\r\n      method: 'POST',\r\n      body: { userId, role },\r\n    });\r\n  },\r\n  \r\n  removeParticipant: async (\r\n    sessionId: number,\r\n    participantId: number\r\n  ): Promise<{ success: boolean; message: string }> => {\r\n    return apiRequest<{ success: boolean; message: string }>(\r\n      `/sessions/${sessionId}/participants/${participantId}`,\r\n      {\r\n        method: 'DELETE',\r\n      }\r\n    );\r\n  },\r\n};"],"names":[],"mappings":";;;AAAA;;AAyCO,MAAM,iBAAiB;IAC5B,aAAa,OACX;QAEA,IAAI,cAAc;QAClB,IAAI,SAAS;YACX,MAAM,SAAS,IAAI;YACnB,IAAI,QAAQ,MAAM,EAAE,OAAO,MAAM,CAAC,UAAU,QAAQ,MAAM;YAC1D,IAAI,QAAQ,IAAI,EAAE,OAAO,MAAM,CAAC,QAAQ,QAAQ,IAAI,CAAC,QAAQ;YAC7D,IAAI,QAAQ,KAAK,EAAE,OAAO,MAAM,CAAC,SAAS,QAAQ,KAAK;YACvD,cAAc,CAAC,CAAC,EAAE,OAAO,QAAQ,IAAI;QACvC;QACA,OAAO,CAAA,GAAA,sIAAA,CAAA,aAAU,AAAD,EAAoB,CAAC,SAAS,EAAE,aAAa;IAC/D;IAEA,gBAAgB,OAAO;QACrB,OAAO,CAAA,GAAA,sIAAA,CAAA,aAAU,AAAD,EAAmB,CAAC,UAAU,EAAE,IAAI;IACtD;IAEA,eAAe,OAAO;QAMpB,OAAO,CAAA,GAAA,sIAAA,CAAA,aAAU,AAAD,EAAmB,aAAa;YAC9C,QAAQ;YACR,MAAM;QACR;IACF;IAEA,eAAe,OACb,IACA;QAOA,OAAO,CAAA,GAAA,sIAAA,CAAA,aAAU,AAAD,EAAmB,CAAC,UAAU,EAAE,IAAI,EAAE;YACpD,QAAQ;YACR,MAAM;QACR;IACF;IAEA,eAAe,OAAO;QACpB,OAAO,CAAA,GAAA,sIAAA,CAAA,aAAU,AAAD,EAAyC,CAAC,UAAU,EAAE,IAAI,EAAE;YAC1E,QAAQ;QACV;IACF;IAEA,gBAAgB,OACd,WACA,QACA;QAEA,OAAO,CAAA,GAAA,sIAAA,CAAA,aAAU,AAAD,EAAyC,CAAC,UAAU,EAAE,UAAU,aAAa,CAAC,EAAE;YAC9F,QAAQ;YACR,MAAM;gBAAE;gBAAQ;YAAK;QACvB;IACF;IAEA,mBAAmB,OACjB,WACA;QAEA,OAAO,CAAA,GAAA,sIAAA,CAAA,aAAU,AAAD,EACd,CAAC,UAAU,EAAE,UAAU,cAAc,EAAE,eAAe,EACtD;YACE,QAAQ;QACV;IAEJ;AACF","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/remyb/Documents/cours/dev%20web%20full%20stack/final%20project/Projet-Full-Stack-Front/src/services/api/characterService.ts"],"sourcesContent":["import { apiRequest } from './apiClient';\r\n\r\nexport interface Character {\r\n  id: number;\r\n  name: string;\r\n  race: string;\r\n  class: string;\r\n  level: number;\r\n  background?: string;\r\n  inventory?: string;\r\n  stats?: any;\r\n  isAlive: boolean;\r\n  userId: number;\r\n  sessionId?: number | null;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  session?: {\r\n    id: number;\r\n    title: string;\r\n    status: string;\r\n  } | null;\r\n}\r\n\r\nexport interface CharactersResponse {\r\n  success: boolean;\r\n  characters: Character[];\r\n}\r\n\r\nexport interface CharacterResponse {\r\n  success: boolean;\r\n  character: Character;\r\n}\r\n\r\nexport const characterService = {\r\n  getCharacters: async (userId?: number): Promise<CharactersResponse> => {\r\n    const queryParams = userId ? `?userId=${userId}` : '';\r\n    return apiRequest<CharactersResponse>(`/characters${queryParams}`);\r\n  },\r\n\r\n  getCharacterById: async (id: number): Promise<CharacterResponse> => {\r\n    return apiRequest<CharacterResponse>(`/characters/${id}`);\r\n  },\r\n\r\n  createCharacter: async (characterData: {\r\n    name: string;\r\n    race: string;\r\n    class: string;\r\n    level: number;\r\n    background?: string;\r\n    inventory?: string;\r\n    stats?: any;\r\n  }): Promise<CharacterResponse> => {\r\n    return apiRequest<CharacterResponse>('/characters', {\r\n      method: 'POST',\r\n      body: characterData,\r\n    });\r\n  },\r\n\r\n  updateCharacter: async (\r\n    id: number,\r\n    characterData: {\r\n      name?: string;\r\n      race?: string;\r\n      class?: string;\r\n      level?: number;\r\n      background?: string;\r\n      inventory?: string;\r\n      stats?: any;\r\n      isAlive?: boolean;\r\n      sessionId?: number | null;\r\n    }\r\n  ): Promise<CharacterResponse> => {\r\n    return apiRequest<CharacterResponse>(`/characters/${id}`, {\r\n      method: 'PUT',\r\n      body: characterData,\r\n    });\r\n  },\r\n\r\n  deleteCharacter: async (id: number): Promise<{ success: boolean; message: string }> => {\r\n    return apiRequest<{ success: boolean; message: string }>(`/characters/${id}`, {\r\n      method: 'DELETE',\r\n    });\r\n  },\r\n\r\n  getSessionCharacters: async (sessionId: number): Promise<CharactersResponse> => {\r\n    return apiRequest<CharactersResponse>(`/characters/session/${sessionId}`);\r\n  },\r\n\r\n  associateWithSession: async (\r\n    characterId: number,\r\n    sessionId: number | null\r\n  ): Promise<CharacterResponse> => {\r\n    return apiRequest<CharacterResponse>(`/characters/${characterId}/assign-session`, {\r\n      method: 'PUT',\r\n      body: { sessionId },\r\n    });\r\n  },\r\n};"],"names":[],"mappings":";;;AAAA;;AAiCO,MAAM,mBAAmB;IAC9B,eAAe,OAAO;QACpB,MAAM,cAAc,SAAS,CAAC,QAAQ,EAAE,QAAQ,GAAG;QACnD,OAAO,CAAA,GAAA,sIAAA,CAAA,aAAU,AAAD,EAAsB,CAAC,WAAW,EAAE,aAAa;IACnE;IAEA,kBAAkB,OAAO;QACvB,OAAO,CAAA,GAAA,sIAAA,CAAA,aAAU,AAAD,EAAqB,CAAC,YAAY,EAAE,IAAI;IAC1D;IAEA,iBAAiB,OAAO;QAStB,OAAO,CAAA,GAAA,sIAAA,CAAA,aAAU,AAAD,EAAqB,eAAe;YAClD,QAAQ;YACR,MAAM;QACR;IACF;IAEA,iBAAiB,OACf,IACA;QAYA,OAAO,CAAA,GAAA,sIAAA,CAAA,aAAU,AAAD,EAAqB,CAAC,YAAY,EAAE,IAAI,EAAE;YACxD,QAAQ;YACR,MAAM;QACR;IACF;IAEA,iBAAiB,OAAO;QACtB,OAAO,CAAA,GAAA,sIAAA,CAAA,aAAU,AAAD,EAAyC,CAAC,YAAY,EAAE,IAAI,EAAE;YAC5E,QAAQ;QACV;IACF;IAEA,sBAAsB,OAAO;QAC3B,OAAO,CAAA,GAAA,sIAAA,CAAA,aAAU,AAAD,EAAsB,CAAC,oBAAoB,EAAE,WAAW;IAC1E;IAEA,sBAAsB,OACpB,aACA;QAEA,OAAO,CAAA,GAAA,sIAAA,CAAA,aAAU,AAAD,EAAqB,CAAC,YAAY,EAAE,YAAY,eAAe,CAAC,EAAE;YAChF,QAAQ;YACR,MAAM;gBAAE;YAAU;QACpB;IACF;AACF","debugId":null}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/remyb/Documents/cours/dev%20web%20full%20stack/final%20project/Projet-Full-Stack-Front/src/services/api/diceRollService.ts"],"sourcesContent":["import { apiRequest } from './apiClient';\r\n\r\nexport interface DiceRoll {\r\n  id: number;\r\n  rollExpression: string;\r\n  result: number;\r\n  userId: number;\r\n  sessionId: number;\r\n  characterId?: number | null;\r\n  timestamp: string;\r\n  metadata?: any;\r\n  user: {\r\n    id: number;\r\n    username: string;\r\n  };\r\n  character?: {\r\n    id: number;\r\n    name: string;\r\n  } | null;\r\n}\r\n\r\nexport interface DiceRollParams {\r\n  expression: string;\r\n  sessionId: number;\r\n  characterId?: number | null;\r\n}\r\n\r\nexport interface DiceRollResponse {\r\n  success: boolean;\r\n  message: string;\r\n  diceRoll: DiceRoll;\r\n}\r\n\r\nexport interface DiceRollsResponse {\r\n  success: boolean;\r\n  count: number;\r\n  diceRolls: DiceRoll[];\r\n}\r\n\r\nexport const diceRollService = {\r\n  rollDice: async (params: DiceRollParams): Promise<DiceRollResponse> => {\r\n    return apiRequest<DiceRollResponse>('/dice-rolls', {\r\n      method: 'POST',\r\n      body: params,\r\n    });\r\n  },\r\n  \r\n  getDiceRollsBySession: async (sessionId: number, limit?: number): Promise<DiceRollsResponse> => {\r\n    const queryParams = limit ? `?sessionId=${sessionId}&limit=${limit}` : `?sessionId=${sessionId}`;\r\n    return apiRequest<DiceRollsResponse>(`/dice-rolls${queryParams}`);\r\n  },\r\n  \r\n  getDiceRollById: async (id: number): Promise<{ success: boolean; diceRoll: DiceRoll }> => {\r\n    return apiRequest<{ success: boolean; diceRoll: DiceRoll }>(`/dice-rolls/${id}`);\r\n  }\r\n};"],"names":[],"mappings":";;;AAAA;;AAuCO,MAAM,kBAAkB;IAC7B,UAAU,OAAO;QACf,OAAO,CAAA,GAAA,sIAAA,CAAA,aAAU,AAAD,EAAoB,eAAe;YACjD,QAAQ;YACR,MAAM;QACR;IACF;IAEA,uBAAuB,OAAO,WAAmB;QAC/C,MAAM,cAAc,QAAQ,CAAC,WAAW,EAAE,UAAU,OAAO,EAAE,OAAO,GAAG,CAAC,WAAW,EAAE,WAAW;QAChG,OAAO,CAAA,GAAA,sIAAA,CAAA,aAAU,AAAD,EAAqB,CAAC,WAAW,EAAE,aAAa;IAClE;IAEA,iBAAiB,OAAO;QACtB,OAAO,CAAA,GAAA,sIAAA,CAAA,aAAU,AAAD,EAA4C,CAAC,YAAY,EAAE,IAAI;IACjF;AACF","debugId":null}},
    {"offset": {"line": 147, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/styles/diceRoller.module.scss.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n});\n"],"names":[],"mappings":"AAAA;AACA"}},
    {"offset": {"line": 155, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/remyb/Documents/cours/dev%20web%20full%20stack/final%20project/Projet-Full-Stack-Front/src/components/diceRoller.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useAuth } from '../contexts/authContext';\r\nimport { characterService } from '../services/api/characterService';\r\nimport { diceRollService } from '../services/api/diceRollService';\r\nimport styles from '../styles/diceRoller.module.scss';\r\n\r\ninterface DiceRollerProps {\r\n  sessionId: number;\r\n  onNewRoll: (roll: any) => void;\r\n}\r\n\r\nexport default function DiceRoller({ sessionId, onNewRoll }: DiceRollerProps) {\r\n  const { user } = useAuth();\r\n  const [expression, setExpression] = useState('1d20');\r\n  const [selectedCharacterId, setSelectedCharacterId] = useState<number | null>(null);\r\n  const [characters, setCharacters] = useState<any[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [characterLoading, setCharacterLoading] = useState(true);\r\n\r\n  // Charger les personnages de l'utilisateur dans cette session\r\n  useEffect(() => {\r\n    const fetchCharacters = async () => {\r\n      try {\r\n        setCharacterLoading(true);\r\n        const response = await characterService.getCharacters(user?.id);\r\n        \r\n        // Filtrer les personnages qui sont dans cette session\r\n        const sessionCharacters = response.characters.filter(\r\n          character => character.sessionId === sessionId\r\n        );\r\n        \r\n        setCharacters(sessionCharacters);\r\n        \r\n        // Sélectionner automatiquement le premier personnage s'il y en a un\r\n        if (sessionCharacters.length > 0) {\r\n          setSelectedCharacterId(sessionCharacters[0].id);\r\n        }\r\n      } catch (error) {\r\n        console.error('Erreur lors du chargement des personnages:', error);\r\n      } finally {\r\n        setCharacterLoading(false);\r\n      }\r\n    };\r\n    \r\n    if (user && sessionId) {\r\n      fetchCharacters();\r\n    }\r\n  }, [user, sessionId]);\r\n\r\n  // Fonction pour gérer les préréglages de dés\r\n  const handlePresetDice = (preset: string) => {\r\n    setExpression(preset);\r\n  };\r\n\r\n  // Fonction pour lancer les dés\r\n  const handleRollDice = async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      const roll = await diceRollService.rollDice({\r\n        expression,\r\n        sessionId,\r\n        characterId: selectedCharacterId\r\n      });\r\n      \r\n      // Notifier le parent du nouveau jet de dés\r\n      onNewRoll(roll.diceRoll);\r\n      \r\n    } catch (error) {\r\n      console.error('Erreur lors du lancer de dés:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.diceRoller}>\r\n      <h3>Lancer de dés</h3>\r\n      \r\n      <div className={styles.diceForm}>\r\n        <div className={styles.presets}>\r\n          <button \r\n            type=\"button\" \r\n            onClick={() => handlePresetDice('1d4')}\r\n            className={styles.presetButton}\r\n          >\r\n            d4\r\n          </button>\r\n          <button \r\n            type=\"button\" \r\n            onClick={() => handlePresetDice('1d6')}\r\n            className={styles.presetButton}\r\n          >\r\n            d6\r\n          </button>\r\n          <button \r\n            type=\"button\" \r\n            onClick={() => handlePresetDice('1d8')}\r\n            className={styles.presetButton}\r\n          >\r\n            d8\r\n          </button>\r\n          <button \r\n            type=\"button\" \r\n            onClick={() => handlePresetDice('1d10')}\r\n            className={styles.presetButton}\r\n          >\r\n            d10\r\n          </button>\r\n          <button \r\n            type=\"button\" \r\n            onClick={() => handlePresetDice('1d12')}\r\n            className={styles.presetButton}\r\n          >\r\n            d12\r\n          </button>\r\n          <button \r\n            type=\"button\" \r\n            onClick={() => handlePresetDice('1d20')}\r\n            className={styles.presetButton}\r\n          >\r\n            d20\r\n          </button>\r\n          <button \r\n            type=\"button\" \r\n            onClick={() => handlePresetDice('1d100')}\r\n            className={styles.presetButton}\r\n          >\r\n            d100\r\n          </button>\r\n        </div>\r\n        \r\n        <div className={styles.inputRow}>\r\n          <input\r\n            type=\"text\"\r\n            value={expression}\r\n            onChange={(e) => setExpression(e.target.value)}\r\n            placeholder=\"ex: 2d6+3\"\r\n            className={styles.expressionInput}\r\n          />\r\n          \r\n          {!characterLoading && characters.length > 0 && (\r\n            <select\r\n              value={selectedCharacterId || ''}\r\n              onChange={(e) => setSelectedCharacterId(e.target.value ? Number(e.target.value) : null)}\r\n              className={styles.characterSelect}\r\n            >\r\n              <option value=\"\">Sans personnage</option>\r\n              {characters.map((character) => (\r\n                <option key={character.id} value={character.id}>\r\n                  {character.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          )}\r\n          \r\n          <button\r\n            onClick={handleRollDice}\r\n            disabled={loading || !expression}\r\n            className={styles.rollButton}\r\n          >\r\n            {loading ? 'Lancement...' : 'Lancer'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className={styles.diceHelp}>\r\n        <p>Format: XdY+Z (ex: 2d6+3)</p>\r\n        <p>X = nombre de dés, Y = faces par dé, Z = modificateur</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 435, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/remyb/Documents/cours/dev%20web%20full%20stack/final%20project/Projet-Full-Stack-Front/src/components/participantManager.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { sessionService } from '../services/api/sessionService';\r\nimport { useAuth } from '../contexts/authContext';\r\nimport styles from '../styles/participantManager.module.scss';\r\n\r\ninterface Participant {\r\n  id: number;\r\n  userId: number;\r\n  role: string;\r\n  user: {\r\n    id: number;\r\n    username: string;\r\n  };\r\n  character?: {\r\n    id: number;\r\n    name: string;\r\n  } | null;\r\n}\r\n\r\ninterface ParticipantManagerProps {\r\n  sessionId: number;\r\n  participants: Participant[];\r\n  isGameMaster: boolean;\r\n  onParticipantsChange: (participants: Participant[]) => void;\r\n}\r\n\r\nexport default function ParticipantManager({ \r\n  sessionId, \r\n  participants,\r\n  isGameMaster, \r\n  onParticipantsChange \r\n}: ParticipantManagerProps) {\r\n  const { user } = useAuth();\r\n  const [allUsers, setAllUsers] = useState<any[]>([]);\r\n  const [selectedUserId, setSelectedUserId] = useState<number | null>(null);\r\n  const [selectedRole, setSelectedRole] = useState('joueur');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    // Charger la liste des utilisateurs (uniquement pour le GM)\r\n    if (isGameMaster) {\r\n      const fetchUsers = async () => {\r\n        try {\r\n          // Cette API doit être implémentée pour récupérer tous les utilisateurs\r\n          const response = await fetch('/api/users');\r\n          const data = await response.json();\r\n          \r\n          // Filtrer les utilisateurs qui ne sont pas déjà participants\r\n          const existingUserIds = participants.map((p) => p.userId);\r\n          const availableUsers = data.users.filter(\r\n            (u: any) => !existingUserIds.includes(u.id)\r\n          );\r\n          \r\n          setAllUsers(availableUsers);\r\n          \r\n          if (availableUsers.length > 0) {\r\n            setSelectedUserId(availableUsers[0].id);\r\n          }\r\n        } catch (error) {\r\n          console.error('Erreur lors du chargement des utilisateurs:', error);\r\n        }\r\n      };\r\n      \r\n      fetchUsers();\r\n    }\r\n  }, [isGameMaster, participants, sessionId]);\r\n\r\n  const handleAddParticipant = async () => {\r\n    if (!selectedUserId) return;\r\n    \r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const response = await sessionService.addParticipant(\r\n        sessionId,\r\n        selectedUserId,\r\n        selectedRole\r\n      );\r\n      \r\n      // Mettre à jour la liste des participants\r\n      if (response.success) {\r\n        // Create a new participant with the selected user\r\n        const selectedUser = allUsers.find(u => u.id === selectedUserId);\r\n        const newParticipant: Participant = {\r\n          id: Date.now(), // Temporary ID until refreshed from server\r\n          userId: selectedUserId,\r\n          role: selectedRole,\r\n          user: {\r\n            id: selectedUserId,\r\n            username: selectedUser?.username || 'Unknown'\r\n          }\r\n        };\r\n        onParticipantsChange([...participants, newParticipant]);\r\n      } else {\r\n        throw new Error(response.message);\r\n      }\r\n      \r\n      // Mettre à jour la liste des utilisateurs disponibles\r\n      setAllUsers(allUsers.filter((u) => u.id !== selectedUserId));\r\n      \r\n      // Réinitialiser la sélection\r\n      if (allUsers.length > 1) {\r\n        setSelectedUserId(allUsers.find((u) => u.id !== selectedUserId)?.id || null);\r\n      } else {\r\n        setSelectedUserId(null);\r\n      }\r\n    } catch (err) {\r\n      setError((err as Error).message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleRemoveParticipant = async (participantId: number) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      await sessionService.removeParticipant(sessionId, participantId);\r\n      \r\n      // Trouver le participant supprimé\r\n      const removedParticipant = participants.find((p) => p.id === participantId);\r\n      \r\n      // Mettre à jour la liste des participants\r\n      onParticipantsChange(participants.filter((p) => p.id !== participantId));\r\n      \r\n      // Ajouter l'utilisateur supprimé à la liste des utilisateurs disponibles\r\n      if (removedParticipant && isGameMaster) {\r\n        setAllUsers([...allUsers, removedParticipant.user]);\r\n      }\r\n    } catch (err) {\r\n      setError((err as Error).message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.participantManager}>\r\n      {error && <div className={styles.error}>{error}</div>}\r\n      \r\n      <div className={styles.participantsList}>\r\n        <h3>Participants</h3>\r\n        \r\n        {participants.length === 0 ? (\r\n          <p className={styles.noParticipants}>Aucun participant</p>\r\n        ) : (\r\n          <ul className={styles.participants}>\r\n            {participants.map((participant) => (\r\n              <li key={participant.id} className={styles.participantItem}>\r\n                <div className={styles.participantInfo}>\r\n                  <span className={styles.username}>{participant.user.username}</span>\r\n                  <span className={styles.role}>{participant.role}</span>\r\n                  {participant.character && (\r\n                    <span className={styles.character}>\r\n                      Personnage: {participant.character.name}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n                \r\n                {(isGameMaster || user?.id === participant.userId) && (\r\n                  <button\r\n                    onClick={() => handleRemoveParticipant(participant.id)}\r\n                    className={styles.removeButton}\r\n                    disabled={loading}\r\n                  >\r\n                    Retirer\r\n                  </button>\r\n                )}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n      \r\n      {isGameMaster && allUsers.length > 0 && (\r\n        <div className={styles.addParticipant}>\r\n          <h3>Ajouter un participant</h3>\r\n          \r\n          <div className={styles.addForm}>\r\n            <select\r\n              value={selectedUserId || ''}\r\n              onChange={(e) => setSelectedUserId(Number(e.target.value))}\r\n              className={styles.userSelect}\r\n              disabled={loading || allUsers.length === 0}\r\n            >\r\n              {allUsers.map((u) => (\r\n                <option key={u.id} value={u.id}>\r\n                  {u.username}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            \r\n            <select\r\n              value={selectedRole}\r\n              onChange={(e) => setSelectedRole(e.target.value)}\r\n              className={styles.roleSelect}\r\n              disabled={loading}\r\n            >\r\n              <option value=\"joueur\">Joueur</option>\r\n              <option value=\"spectateur\">Spectateur</option>\r\n              <option value=\"admin\">Admin</option>\r\n            </select>\r\n            \r\n            <button\r\n              onClick={handleAddParticipant}\r\n              className={styles.addButton}\r\n              disabled={loading || !selectedUserId}\r\n            >\r\n              Ajouter\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 766, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/styles/sessionDetail.module.scss.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"actionButton\": \"sessionDetail-module-scss-module__kGbaYW__actionButton\",\n  \"actions\": \"sessionDetail-module-scss-module__kGbaYW__actions\",\n  \"active\": \"sessionDetail-module-scss-module__kGbaYW__active\",\n  \"backButton\": \"sessionDetail-module-scss-module__kGbaYW__backButton\",\n  \"cancel\": \"sessionDetail-module-scss-module__kGbaYW__cancel\",\n  \"characterCard\": \"sessionDetail-module-scss-module__kGbaYW__characterCard\",\n  \"characterHeader\": \"sessionDetail-module-scss-module__kGbaYW__characterHeader\",\n  \"characterMeta\": \"sessionDetail-module-scss-module__kGbaYW__characterMeta\",\n  \"characterOwner\": \"sessionDetail-module-scss-module__kGbaYW__characterOwner\",\n  \"charactersList\": \"sessionDetail-module-scss-module__kGbaYW__charactersList\",\n  \"charactersTab\": \"sessionDetail-module-scss-module__kGbaYW__charactersTab\",\n  \"date\": \"sessionDetail-module-scss-module__kGbaYW__date\",\n  \"delete\": \"sessionDetail-module-scss-module__kGbaYW__delete\",\n  \"description\": \"sessionDetail-module-scss-module__kGbaYW__description\",\n  \"diceRollHistory\": \"sessionDetail-module-scss-module__kGbaYW__diceRollHistory\",\n  \"diceRollsTab\": \"sessionDetail-module-scss-module__kGbaYW__diceRollsTab\",\n  \"editForm\": \"sessionDetail-module-scss-module__kGbaYW__editForm\",\n  \"en_cours\": \"sessionDetail-module-scss-module__kGbaYW__en_cours\",\n  \"formGroup\": \"sessionDetail-module-scss-module__kGbaYW__formGroup\",\n  \"gamemaster\": \"sessionDetail-module-scss-module__kGbaYW__gamemaster\",\n  \"header\": \"sessionDetail-module-scss-module__kGbaYW__header\",\n  \"infoTab\": \"sessionDetail-module-scss-module__kGbaYW__infoTab\",\n  \"noCharacters\": \"sessionDetail-module-scss-module__kGbaYW__noCharacters\",\n  \"noDescription\": \"sessionDetail-module-scss-module__kGbaYW__noDescription\",\n  \"noRolls\": \"sessionDetail-module-scss-module__kGbaYW__noRolls\",\n  \"planifiée\": \"sessionDetail-module-scss-module__kGbaYW__planifiée\",\n  \"rollExpression\": \"sessionDetail-module-scss-module__kGbaYW__rollExpression\",\n  \"rollHeader\": \"sessionDetail-module-scss-module__kGbaYW__rollHeader\",\n  \"rollItem\": \"sessionDetail-module-scss-module__kGbaYW__rollItem\",\n  \"rollMeta\": \"sessionDetail-module-scss-module__kGbaYW__rollMeta\",\n  \"rollResult\": \"sessionDetail-module-scss-module__kGbaYW__rollResult\",\n  \"rollsList\": \"sessionDetail-module-scss-module__kGbaYW__rollsList\",\n  \"saveButton\": \"sessionDetail-module-scss-module__kGbaYW__saveButton\",\n  \"sessionDetail\": \"sessionDetail-module-scss-module__kGbaYW__sessionDetail\",\n  \"sessionHeader\": \"sessionDetail-module-scss-module__kGbaYW__sessionHeader\",\n  \"sessionMeta\": \"sessionDetail-module-scss-module__kGbaYW__sessionMeta\",\n  \"status\": \"sessionDetail-module-scss-module__kGbaYW__status\",\n  \"tab\": \"sessionDetail-module-scss-module__kGbaYW__tab\",\n  \"tabContent\": \"sessionDetail-module-scss-module__kGbaYW__tabContent\",\n  \"tabs\": \"sessionDetail-module-scss-module__kGbaYW__tabs\",\n  \"terminée\": \"sessionDetail-module-scss-module__kGbaYW__terminée\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 815, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/remyb/Documents/cours/dev%20web%20full%20stack/final%20project/Projet-Full-Stack-Front/src/app/sessions/%5Bid%5D/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams, useRouter } from 'next/navigation';\r\nimport { sessionService } from '../../../services/api/sessionService';\r\nimport { characterService } from '../../../services/api/characterService';\r\nimport { useAuth } from '../../../contexts/authContext';\r\nimport Link from 'next/link';\r\nimport DiceRoller from '../../../components/diceRoller';\r\nimport ParticipantManager from '../../../components/participantManager';\r\nimport styles from '../../../styles/sessionDetail.module.scss';\r\n\r\nexport default function SessionDetail() {\r\n  const params = useParams();\r\n  const router = useRouter();\r\n  const { user } = useAuth();\r\n  const [session, setSession] = useState<any>(null);\r\n  const [characters, setCharacters] = useState<any[]>([]);\r\n  const [diceRolls, setDiceRolls] = useState<any[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    description: '',\r\n    scheduledAt: '',\r\n    status: 'planifiée',\r\n  });\r\n  const [activeTab, setActiveTab] = useState('info');\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        \r\n        // Récupérer les détails de la session\r\n        const id = Array.isArray(params.id) ? params.id[0] : params.id;\r\n        const response = await sessionService.getSessionById(Number(id));\r\n        setSession(response.session);\r\n        \r\n        // Initialiser le formulaire avec les données de la session\r\n        setFormData({\r\n          title: response.session.title,\r\n          description: response.session.description || '',\r\n          scheduledAt: response.session.scheduledAt \r\n            ? new Date(response.session.scheduledAt).toISOString().split('T')[0] \r\n            : '',\r\n          status: response.session.status,\r\n        });\r\n        \r\n        // Récupérer les personnages de la session\r\n        const charactersResponse = await characterService.getSessionCharacters(Number(id));\r\n        setCharacters(charactersResponse.characters);\r\n        \r\n        // Les jets de dés sont déjà récupérés avec la session dans votre API\r\n        if (response.session.diceRolls) {\r\n          setDiceRolls(response.session.diceRolls);\r\n        }\r\n      } catch (err) {\r\n        setError((err as Error).message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [params.id]);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      setLoading(true);\r\n      const id = Array.isArray(params.id) ? params.id[0] : params.id;\r\n      const response = await sessionService.updateSession(Number(id), formData);\r\n      setSession(response.session);\r\n      setEditMode(false);\r\n    } catch (err) {\r\n      setError((err as Error).message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    if (window.confirm('Êtes-vous sûr de vouloir supprimer cette session ? Cette action est irréversible.')) {\r\n      try {\r\n        const id = Array.isArray(params.id) ? params.id[0] : params.id;\r\n        await sessionService.deleteSession(Number(id));\r\n        router.push('/sessions');\r\n      } catch (err) {\r\n        setError((err as Error).message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const isGameMaster = user && session && user.id === session.gmId;\r\n\r\n  if (loading) {\r\n    return <div className={styles.loading}>Chargement des détails de la session...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className={styles.error}>{error}</div>;\r\n  }\r\n\r\n  if (!session) {\r\n    return <div className={styles.notFound}>Session non trouvée</div>;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.sessionDetail}>\r\n      <div className={styles.header}>\r\n        <Link href=\"/sessions\" className={styles.backButton}>\r\n          &larr; Retour aux sessions\r\n        </Link>\r\n        {isGameMaster && (\r\n          <div className={styles.actions}>\r\n            <button \r\n              onClick={() => setEditMode(!editMode)} \r\n              className={`${styles.actionButton} ${editMode ? styles.cancel : ''}`}\r\n            >\r\n              {editMode ? 'Annuler' : 'Modifier'}\r\n            </button>\r\n            {!editMode && (\r\n              <button onClick={handleDelete} className={`${styles.actionButton} ${styles.delete}`}>\r\n                Supprimer\r\n              </button>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {editMode ? (\r\n        <form onSubmit={handleSubmit} className={styles.editForm}>\r\n          <h1>Modifier la session</h1>\r\n          \r\n          <div className={styles.formGroup}>\r\n            <label htmlFor=\"title\">Titre</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"title\"\r\n              name=\"title\"\r\n              value={formData.title}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          \r\n          <div className={styles.formGroup}>\r\n            <label htmlFor=\"description\">Description</label>\r\n            <textarea\r\n              id=\"description\"\r\n              name=\"description\"\r\n              value={formData.description}\r\n              onChange={handleChange}\r\n              rows={4}\r\n            />\r\n          </div>\r\n          \r\n          <div className={styles.formRow}>\r\n            <div className={styles.formGroup}>\r\n              <label htmlFor=\"scheduledAt\">Date prévue</label>\r\n              <input\r\n                type=\"date\"\r\n                id=\"scheduledAt\"\r\n                name=\"scheduledAt\"\r\n                value={formData.scheduledAt}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            \r\n            <div className={styles.formGroup}>\r\n              <label htmlFor=\"status\">Statut</label>\r\n              <select\r\n                id=\"status\"\r\n                name=\"status\"\r\n                value={formData.status}\r\n                onChange={handleChange}\r\n                required\r\n              >\r\n                <option value=\"planifiée\">Planifiée</option>\r\n                <option value=\"en cours\">En cours</option>\r\n                <option value=\"terminée\">Terminée</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className={styles.formActions}>\r\n            <button type=\"submit\" className={styles.submitButton}>\r\n              Enregistrer les modifications\r\n            </button>\r\n            <button \r\n              type=\"button\" \r\n              onClick={() => setEditMode(false)} \r\n              className={styles.cancelButton}\r\n            >\r\n              Annuler\r\n            </button>\r\n          </div>\r\n        </form>\r\n      ) : (\r\n        <>\r\n          <div className={styles.sessionHeader}>\r\n            <div>\r\n              <h1>{session.title}</h1>\r\n              <div className={styles.sessionMeta}>\r\n                <span className={`${styles.status} ${styles[session.status]}`}>\r\n                  {session.status}\r\n                </span>\r\n                <span className={styles.gamemaster}>\r\n                  MJ: {session.gm.username}\r\n                </span>\r\n                {session.scheduledAt && (\r\n                  <span className={styles.date}>\r\n                    Date: {new Date(session.scheduledAt).toLocaleDateString('fr-FR')}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className={styles.tabs}>\r\n            <button \r\n              className={`${styles.tab} ${activeTab === 'info' ? styles.active : ''}`}\r\n              onClick={() => setActiveTab('info')}\r\n            >\r\n              Informations\r\n            </button>\r\n            <button \r\n              className={`${styles.tab} ${activeTab === 'participants' ? styles.active : ''}`}\r\n              onClick={() => setActiveTab('participants')}\r\n            >\r\n              Participants ({session.participants.length})\r\n            </button>\r\n            <button \r\n              className={`${styles.tab} ${activeTab === 'characters' ? styles.active : ''}`}\r\n              onClick={() => setActiveTab('characters')}\r\n            >\r\n              Personnages ({characters.length})\r\n            </button>\r\n            <button \r\n              className={`${styles.tab} ${activeTab === 'diceRolls' ? styles.active : ''}`}\r\n              onClick={() => setActiveTab('diceRolls')}\r\n            >\r\n              Jets de dés\r\n            </button>\r\n          </div>\r\n          \r\n          <div className={styles.tabContent}>\r\n            {activeTab === 'info' && (\r\n              <div className={styles.infoTab}>\r\n                {session.description ? (\r\n                  <div className={styles.description}>\r\n                    <h2>Description</h2>\r\n                    <p>{session.description}</p>\r\n                  </div>\r\n                ) : (\r\n                  <p className={styles.noDescription}>Aucune description disponible</p>\r\n                )}\r\n              </div>\r\n            )}\r\n            \r\n            {activeTab === 'participants' && (\r\n              <div className={styles.participantsTab}>\r\n                <ParticipantManager \r\n                  sessionId={session.id} \r\n                  participants={session.participants} \r\n                  isGameMaster={isGameMaster}\r\n                  onParticipantsChange={(updatedParticipants) => {\r\n                    setSession({\r\n                      ...session,\r\n                      participants: updatedParticipants\r\n                    });\r\n                  }}\r\n                />\r\n              </div>\r\n            )}\r\n            \r\n            {activeTab === 'characters' && (\r\n              <div className={styles.charactersTab}>\r\n                {characters.length > 0 ? (\r\n                  <div className={styles.charactersList}>\r\n                    {characters.map((character) => (\r\n                      <Link\r\n                        key={character.id}\r\n                        href={`/characters/${character.id}`}\r\n                        className={styles.characterCard}\r\n                      >\r\n                        <div className={styles.characterHeader}>\r\n                          <h3>{character.name}</h3>\r\n                          <span>Niv. {character.level}</span>\r\n                        </div>\r\n                        <p className={styles.characterMeta}>\r\n                          {character.race} {character.class}\r\n                        </p>\r\n                        <p className={styles.characterOwner}>\r\n                          Joueur: {character.user.username}\r\n                        </p>\r\n                      </Link>\r\n                    ))}\r\n                  </div>\r\n                ) : (\r\n                  <p className={styles.noCharacters}>\r\n                    Aucun personnage dans cette session\r\n                  </p>\r\n                )}\r\n              </div>\r\n            )}\r\n            \r\n            {activeTab === 'diceRolls' && (\r\n              <div className={styles.diceRollsTab}>\r\n                <DiceRoller \r\n                  sessionId={session.id} \r\n                  onNewRoll={(newRoll) => {\r\n                    setDiceRolls([newRoll, ...diceRolls]);\r\n                  }}\r\n                />\r\n                \r\n                <div className={styles.diceRollHistory}>\r\n                  <h3>Historique des jets de dés</h3>\r\n                  {diceRolls.length > 0 ? (\r\n                    <ul className={styles.rollsList}>\r\n                      {diceRolls.map((roll) => (\r\n                        <li key={roll.id} className={styles.rollItem}>\r\n                          <div className={styles.rollHeader}>\r\n                            <span className={styles.rollExpression}>\r\n                              {roll.rollExpression}\r\n                            </span>\r\n                            <span className={styles.rollResult}>\r\n                              {roll.result}\r\n                            </span>\r\n                          </div>\r\n                          <div className={styles.rollMeta}>\r\n                            <span className={styles.rollUser}>\r\n                              {roll.user.username}\r\n                            </span>\r\n                            {roll.character && (\r\n                              <span className={styles.rollCharacter}>\r\n                                ({roll.character.name})\r\n                              </span>\r\n                            )}\r\n                            <span className={styles.rollTime}>\r\n                              {new Date(roll.timestamp).toLocaleTimeString('fr-FR')}\r\n                            </span>\r\n                          </div>\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  ) : (\r\n                    <p className={styles.noRolls}>Aucun jet de dés effectué</p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}